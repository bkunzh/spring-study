<?xml version="1.0"?>
<configuration>
    <appender name="FILE" class="ch.qos.logback.core.FileAppender">
        <file>g:/log/test.log</file>
        <encoder>
            <pattern>%date %level [%thread] %logger{50} \(%file:%line\) %msg%n</pattern>
        </encoder>
    </appender>

    <!--<appender name="FILE2" class="ch.qos.logback.core.FileAppender">
        <file>g:/log/test22.log</file>
        <encoder>
            <pattern>%date %level [%thread] %logger{50} \(%file:%line\) %msg%n</pattern>
        </encoder>
    </appender>-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%date %level [%thread] %logger{50} \(%file:%line\) %X{traceId} %msg%n</pattern>
        </encoder>
    </appender>

    <root level="info">
        <appender-ref ref="FILE" />
        <appender-ref ref="STDOUT" />
    </root>

    <logger name="com.bkunzhang.springboot.log" level="debug" />


    <!-- 精确设置每个包下面的日志
    若是additivity设为false，则子Logger只会在自己的appender里输出，不会在root的logger的appender里输出；
    若是additivity设为true，则子Logger不止会在自己的appender里输出，还会在root的logger的appender里输出，
    因为这两个Logger都设置STDOUT，若是additivity设为true，匹配这个logger的日志会在控制台打印2遍日志 -->
    <!--<logger name="com.bkunzhang.springboot.util" additivity="false">
        <level value="debug" />
        <appender-ref ref="FILE2" />
        <appender-ref ref="STDOUT" />
    </logger>-->

</configuration>